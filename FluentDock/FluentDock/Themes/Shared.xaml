<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- SHAPES -->
    <Geometry x:Key="MaximizeGeometry">
        M 0,0 9,0 9,9 0,9 Z
        M 1,3 8,3 8,8 1,8 Z
    </Geometry>

    <Geometry x:Key="RestoreGeometry">
        M 3,3 4,3 4,2 9,2 9,6 7,6 7,7 10,7 10,0 3,0 Z
        M 0,3 7,3 7,10 0,10 Z
        M 1,5 6,5 6,9 1,9 Z
    </Geometry>

    <Geometry x:Key="CloseShapeGeometry">
        <!--M 0,0 0,1 1,1 1,2 2,2 2,3 3,3 3,4 2,4 2,5 1,5 1,6 0,6 0,7 2,7 2,6 3,6 3,5 5,5 5,6 6,6 6,7 8,7 8,6 7,6 7,5 6,5 6,4 5,4 5,3 6,3 6,2 7,2 7,1 8,1 8,0 6,0 6,1 5,1 5,2 3,2 3,1 2,1 2,0Z-->
        M 0,0 L 3,0 3,1 4,1 4,2 6,2 6,1 7,1 7,0 10,0 10,1 9,1 9,2 8,2 8,3 7,3 7,5 8,5 8,6 9,6 9,7 10,7 10,8 7,8 7,7 6,7 6,6 4,6 4,7 3,7 3,8 0,8 0,7 1,7 1,6 2,6 2,5 3,5 3,3 2,3 2,2 1,2 1,1 0,1 Z
    </Geometry>

    <Geometry x:Key="Document_HorizontalPinGeometry">
        M 0,4 3,4 3,7 4,7 4,6 8,6 8,1 4,1 4,0 3,0 3,3 0,3 Z
        M 4,2 7,2 7,4 4,4 Z
    </Geometry>

    <Geometry x:Key="Document_VerticalPinGeometry">
        M 4,8 4,5 7,5 7,4 6,4 6,0 1,0 1,4 0,4 0,5 3,5 3,8 Z
        M 2,4 2,1 4,1 4,4 Z
    </Geometry>

    <Geometry x:Key="Pane_VerticalPinGeometry">
        M 4,11 4,7 7,7 7,6 6,6 6,0 1,0 1,6 0,6 0,7 3,7 3,11 Z
            M 2,6 2,1 4,1 4,6 Z
    </Geometry>

    <Geometry x:Key="Pane_HorizontalPinShape">
        M 0,4 4,4 4,7 5,7 5,6 11,6 11,1 5,1 5,0 4,0 4,3 0,3 Z
        M 5,2 10,2 10,4 5,4 Z
    </Geometry>

    <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>

    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>

    <SolidColorBrush x:Key="IconFillBrush" Color="#75633D" />

    <Style x:Key="IconToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource IconFillBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="bg"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="True"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFFCF4" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="BorderBrush" Value="#E5C365" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="#FFE8A6" />
                            <Setter Property="BorderBrush" Value="#E5C365" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource IconFillBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="bg"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="True"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFFCF4" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="BorderBrush" Value="#E5C365" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="#FFE8A6" />
                            <Setter Property="BorderBrush" Value="#E5C365" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PinButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource IconButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content">
                    <Setter.Value>
                        <Path Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}"
                              Stretch="None"
                              SnapsToDevicePixels="True"
                              Data="{StaticResource Pane_HorizontalPinShape}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content">
                    <Setter.Value>
                        <Path Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}"
                              Stretch="None"
                              SnapsToDevicePixels="True"
                              Data="{StaticResource Pane_VerticalPinGeometry}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="DocumentIconButtonStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource IconButtonStyle}">
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="17" />
    </Style>

    <Style x:Key="DocumentPane_PinButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource DocumentIconButtonStyle}" x:Shared="False">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content">
                    <Setter.Value>
                        <Path Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}"
                              Stretch="None"
                              SnapsToDevicePixels="True"
                              Data="{StaticResource Document_HorizontalPinGeometry}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content">
                    <Setter.Value>
                        <Path Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}"
                              Stretch="None"
                              SnapsToDevicePixels="True"
                              Data="{StaticResource Document_VerticalPinGeometry}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CloseButton_DefaultStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource DocumentIconButtonStyle}" x:Shared="False">
        <Setter Property="Content">
            <Setter.Value>
                <Path Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}"
                      SnapsToDevicePixels="True"
                      Stretch="None"
                      Data="{StaticResource CloseShapeGeometry}" />
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>